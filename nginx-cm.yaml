---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    user www-data;
    worker_processes auto;
    pid /run/nginx.pid;
    include /etc/nginx/modules-enabled/*.conf;
    events {
        worker_connections 2048;
        # multi_accept on;
    }
    http {
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 60;
        types_hash_max_size 2048;
        server_tokens off;
        server_names_hash_bucket_size 64;
        server_name_in_redirect off;
        disable_symlinks off;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
        ssl_prefer_server_ciphers on;

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        client_max_body_size 101m;

        gzip on;
        gzip_disable "msie6";
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 7;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        # Set real ip from Cloudflare header
        # real_ip_header CF-Connecting-IP;

        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-sites-enabled-conf
data:
  default.conf: |
    server {
        # Listen and server name
        server_name _;
        listen 80 http2;
        listen [::]:80 http2;

        root /var/www/example.com/www/public_html;
        index index.php index.html index.htm;
        charset utf-8;
        error_page 404 /404.html;

        location / {
            try_files $uri $uri/ =404;
        }
        location = /favicon.ico {
            access_log off;
            log_not_found off;
        }
        location = /robots.txt {
            access_log off;
            log_not_found off;
        }
        location ~ \.php$ {
            include fastcgi_params;
            fastcgi_pass php-fpm:9000;

            # regex to split $uri to $fastcgi_script_name and $fastcgi_path
            fastcgi_split_path_info ^(.+\.php)(.*)$;

            # Check that the PHP script exists before passing it
            try_files $fastcgi_script_name =404;

            fastcgi_intercept_errors on;
            # Bypass the fact that try_files resets $fastcgi_path_info
            # see: http://trac.nginx.org/nginx/ticket/321
            set $path_info $fastcgi_path_info;
            fastcgi_param PATH_INFO $path_info;

            fastcgi_index index.php;
        }
        location ~ /\.ht {
            deny all;
        }
    }
